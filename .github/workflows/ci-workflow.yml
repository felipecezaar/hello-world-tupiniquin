name: CI Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Calculate new version
        id: tag_version
        run: |
          # Busca todas as tags remotas
          git fetch --tags
          
          # Encontra a última tag ou usa 0.0.0 se não existir
          latest_tag=$(git describe --tags --match '0.0.*' --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "Current tag: $latest_tag"
          
          # Incrementa a versão
          IFS='.' read -r -a parts <<< "${latest_tag#v}"
          new_patch=$((parts[2] + 1))
          new_tag="0.0.$new_patch"
          
          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create and push Git tag (only if new)
        run: |
          new_tag=${{ steps.tag_version.outputs.new_tag }}
          
          # Verifica se a tag já existe localmente
          if git rev-parse -q --verify "refs/tags/$new_tag" >/dev/null; then
            echo "Tag $new_tag already exists locally, skipping creation"
          else
            # Verifica se a tag existe no remote
            if git ls-remote --tags origin "refs/tags/$new_tag" | grep -q "$new_tag"; then
              echo "Tag $new_tag already exists on remote, skipping creation"
            else
              git tag $new_tag
              git push origin $new_tag
              echo "Git tag $new_tag created and pushed"
            fi
          fi

  docker_build:
    needs: versioning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            felipeacezar/hello-world:${{ needs.versioning.outputs.new_tag }}
            felipeacezar/hello-world:latest
          build-args: |
            NO_CACHE=true