name: CI Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Get all tags from remote
        run: git fetch --tags --force

      - name: Debug - List all tags
        run: git tag -l --sort=-v:refname

      - name: Calculate next version
        id: tag_version
        run: |
          # Lista todas as tags no padrão 0.0.* ordenadas por versão
          latest_tag=$(git tag -l '0.0.*' --sort=-v:refname | head -n 1)
          
          if [ -z "$latest_tag" ]; then
            # Se não existir nenhuma tag, começa com 0.0.1
            new_tag="0.0.1"
            echo "No existing tags found, starting with $new_tag"
          else
            echo "Latest tag found: $latest_tag"
            # Extrai o número da versão
            IFS='.' read -r -a version_parts <<< "${latest_tag#v}"
            patch=${version_parts[2]}
            new_patch=$((patch + 1))
            new_tag="0.0.$new_patch"
            echo "Next tag will be: $new_tag"
          fi
          
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create and push new tag
        run: |
          new_tag=${{ steps.tag_version.outputs.new_tag }}
          echo "Creating tag: $new_tag"
          
          # Verifica se a tag já existe (prevenção extra)
          if git rev-parse "$new_tag" >/dev/null 2>&1; then
            echo "ERROR: Tag $new_tag already exists!"
            exit 1
          else
            git tag "$new_tag"
            git push origin "$new_tag"
            echo "Successfully created and pushed tag $new_tag"
          fi

  docker_build:
    needs: versioning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            felipeacezar/hello-world:${{ needs.versioning.outputs.new_tag }}
            felipeacezar/hello-world:latest
          build-args: |
            NO_CACHE=true